{
  "name": "crypto-zap-dash",
  "version": "1.0.0",
  "description": "Crypto Dashboard - Python/FastAPI + React + Docker",
  "private": true,
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && python main.py",
    "dev:frontend": "cd client && npm run dev",
    "build:backend": "cd backend && pip install -r requirements.txt",
    "build:frontend": "cd client && npm run build",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && python -m pytest tests/",
    "test:frontend": "cd client && npm test",
    "install:all": "npm run install:backend && npm run install:frontend",
    "install:backend": "cd backend && pip install -r requirements.txt",
    "install:frontend": "cd client && npm install",
    "setup": "npm run install:all && npm run setup:db",
    "setup:db": "cd backend && python setup_database.py",
    "start:backend": "cd backend && python main.py",
    "start:frontend": "cd client && npm run dev",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && rm -rf __pycache__ .pytest_cache",
    "clean:frontend": "cd client && rm -rf node_modules dist",
    
    "docker:up": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:down": "docker-compose -f docker-compose.dev.yml down",
    "docker:build": "docker-compose -f docker-compose.dev.yml build",
    "docker:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "docker:restart": "docker-compose -f docker-compose.dev.yml restart",
    "docker:status": "docker ps --filter name=crypto-dashboard",
    "docker:health": "curl -f http://localhost:5000/api/health || echo 'Backend not responding'",
    "docker:shell:backend": "docker exec -it crypto-dashboard-backend-dev bash",
    "docker:shell:frontend": "docker exec -it crypto-dashboard-frontend-dev sh",
    "docker:shell:postgres": "docker exec -it crypto-dashboard-postgres-dev psql -U crypto_user -d crypto_dashboard",
    "docker:logs:backend": "docker-compose -f docker-compose.dev.yml logs -f backend",
    "docker:logs:frontend": "docker-compose -f docker-compose.dev.yml logs -f frontend",
    "docker:logs:postgres": "docker-compose -f docker-compose.dev.yml logs -f postgres",
    "docker:rebuild": "docker-compose -f docker-compose.dev.yml up --build -d",
    "docker:reset": "npm run docker:down && docker volume rm crypto-zap-dash_postgres_data_dev && npm run docker:up",
    "docker:clean": "docker system prune -f",
    "docker:stats": "docker stats --no-stream",
    "docker:monitor": "concurrently \"npm run docker:logs:backend\" \"npm run docker:logs:frontend\" \"npm run docker:logs:postgres\"",
    
    "docker:prod:up": "docker-compose up -d",
    "docker:prod:down": "docker-compose down",
    "docker:prod:build": "docker-compose build",
    "docker:prod:logs": "docker-compose logs -f",
    "docker:prod:restart": "docker-compose restart",
    "docker:prod:status": "docker ps --filter name=crypto-dashboard",
    "docker:prod:health": "curl -f https://localhost/api/health || echo 'Backend not responding'",
    "docker:prod:shell:backend": "docker exec -it crypto-dashboard-backend bash",
    "docker:prod:shell:frontend": "docker exec -it crypto-dashboard-frontend sh",
    "docker:prod:shell:postgres": "docker exec -it crypto-dashboard-postgres psql -U crypto_user -d crypto_dashboard",
    "docker:prod:logs:backend": "docker-compose logs -f backend",
    "docker:prod:logs:frontend": "docker-compose logs -f frontend",
    "docker:prod:logs:postgres": "docker-compose logs -f postgres",
    "docker:prod:rebuild": "docker-compose up --build -d",
    "docker:prod:reset": "npm run docker:prod:down && docker volume rm crypto-zap-dash_postgres_data && npm run docker:prod:up",
    "docker:prod:monitor": "concurrently \"npm run docker:prod:logs:backend\" \"npm run docker:prod:logs:frontend\" \"npm run docker:prod:logs:postgres\"",
    
    "start": "npm run docker:up",
    "stop": "npm run docker:down",
    "restart": "npm run docker:restart",
    "logs": "npm run docker:logs",
    "status": "npm run docker:status",
    "health": "npm run docker:health",
    "build": "npm run docker:build",
    "rebuild": "npm run docker:rebuild",
    "reset": "npm run docker:reset",
    "monitor": "npm run docker:monitor",
    "shell:backend": "npm run docker:shell:backend",
    "shell:frontend": "npm run docker:shell:frontend",
    "shell:postgres": "npm run docker:shell:postgres",
    "help": "echo '=== CRYPTO DASHBOARD DOCKER COMMANDS ===' && echo 'npm start          - Start development environment' && echo 'npm stop           - Stop development environment' && echo 'npm restart        - Restart development environment' && echo 'npm logs           - Show all logs' && echo 'npm status         - Show container status' && echo 'npm health         - Check backend health' && echo 'npm build          - Build containers' && echo 'npm rebuild        - Rebuild and start containers' && echo 'npm reset          - Reset database and restart' && echo 'npm monitor        - Monitor all logs' && echo 'npm shell:backend  - Access backend container' && echo 'npm shell:frontend - Access frontend container' && echo 'npm shell:postgres - Access database' && echo '' && echo '=== PRODUCTION COMMANDS ===' && echo 'npm run docker:prod:up      - Start production environment' && echo 'npm run docker:prod:down    - Stop production environment' && echo 'npm run docker:prod:logs    - Show production logs' && echo 'npm run docker:prod:status  - Show production status' && echo 'npm run docker:prod:health  - Check production health'"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/crypto-zap-dash.git"
  },
  "keywords": [
    "crypto",
    "dashboard",
    "python",
    "fastapi",
    "react",
    "docker",
    "typescript",
    "postgresql"
  ],
  "author": "Your Name",
  "license": "MIT"
} 